<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:cache="http://www.springframework.org/schema/cache"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-3.2.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache-3.2.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 8补充transactionManager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- 3 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 2  dbcp-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
			<property name="driverClassName" value="${jdbc.driver}"></property>
			<property name="url" value="${jdbc.url}"></property>
			<property name="username" value="${jdbc.username}"></property>
			<property name="password" value="${jdbc.password}"></property>
			<property name="initialSize" value="${dbcp.initialSize}"></property>
			<property name="maxActive" value="${dbcp.maxActive}"></property>
			<property name="maxIdle" value="${dbcp.maxIdle}"></property>
			<property name="maxWait" value="${dbcp.maxWait}"></property>
	</bean>
	
	
	<!-- 1 配置sqlSessionFactory 需要有数据源，需要指定mybatis的总配置文件所在 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>
	
	<!-- 4 Dao Mapper代理的形式开发 -->
		<!-- 一次配置Mapper 推荐使用 -->
		<bean id="mapper"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
				<property name="basePackage" value="org.agtsys.mapper" />
		</bean>
	<!-- 5 server层 -->
	<!-- 一次配置service 推荐使用 -->
		<context:component-scan base-package="org.agtsys.service"/>
</beans>